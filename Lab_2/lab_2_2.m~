% Piotr Skalski
clc;
clearvars;
close all;

% Img = imread('parrot.bmp');
Img = imread('clock.bmp');
% Img = imread('chessboard.bmp');

figure(1);
imshow(Img)

xReScale = 1.5;
yReScale = 1.5;

[YY,XX] = size(Img);
nYY= floor(YY * yReScale);
nXX= floor(XX * xReScale);

nI = uint8(zeros(nYY,nXX));

xStep = XX/nXX;
yStep = YY/nYY;

% XX - width
% YY - height

% up -> down
for j = 0:nYY-1
    % left -> right
    for i = 0:nXX-1
        
        ii = i*xStep;
        jj = j*yStep;
        
        % A
        i_A = floor(ii);
        j_A = floor(jj);
        
        % B
        i_B = i_A + 1;
        j_B = j_A;
        
        % C
        i_C = i_A + 1;
        j_C = j_A + 1;
        
        % D
        i_D = i_A;
        j_D = j_A + 1;
        
        if i2 > XX-1
            i2 = XX-1;
        end
        if j2 > YY-1
            j2 = YY-1;
        end
        
%         if(i_A > XX-1) 
%             i_A = XX-1;
%         end
%         if(i_B > XX-1) 
%             i_B = XX-1;
%         end
%         if(i_C > XX-1) 
%             i_C = XX-1;
%         end
%         if(i_D > XX-1) 
%             i_D = XX-1;
%         end
%         if(j_A > YY-1) 
%             j_A = YY-1;
%         end
%         if(j_B > YY-1) 
%             j_B = YY-1;
%         end
%         if(j_C > YY-1) 
%             j_C = YY-1;
%         end
%         if(j_D > YY-1) 
%             j_D = YY-1;
%         end

        fA = double(Img(j_A+1,i_A+1));
        fB = double(Img(j_B+1,i_B+1));
        fC = double(Img(j_C+1,i_C+1));
        fD = double(Img(j_D+1,i_D+1));
        
        nI(j+1,i+1) = uint8([1-i i] * [fA fD; fB fC]*[1-j; j]);
        
%         ii = i*xStep;
%         jj = j*yStep;
%         i1 = floor(ii);
%         j1 = floor(jj);
%         i2 = i1+1;
%         j2 = j1+1;
%         
%         if i2 > XX-1
%             i2 = XX-1;
%         end
%         if j2 > YY-1
%             j2 = YY-1;
%         end
%         
%         in = rem(ii,1);
%         jn = rem(jj,1);
%         
%         nI(j+1,i+1) = Img(j1+1,i1+1)*(1-in)*(1-jn) + Img(j1+1,i2+1)*in*(1-jn)+Img(j2+1,i2+1)*in*jn+Img(j2+1,i1+1)*(1-in)*jn;

    end
end

figure(2);
imshow(nI)